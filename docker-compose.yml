version: '3.8'

services:
  backend-server:
    image: ghcr.io/leungwj/lateats-backend-server:latest
    # build:
    #   context: ./backend/node_server
    #   dockerfile: Dockerfile
    container_name: backend-server
    restart: always
    ports:
      - '5000:5000'
    depends_on:
      - mongodb
    networks:
      - intranet
    command: npm start

  mongodb:
    image: mongo:7.0.5
    restart: always
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - intranet
    volumes:
      - mongodb-data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb:27017/
    networks:
      - intranet
    depends_on:
      - mongodb
  
  frontend-server:
    image: ghcr.io/leungwj/lateats-frontend-server:latest
    # build:
    #   context: ./lateats
    #   dockerfile: Dockerfile
    container_name: frontend-server
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      - backend-server
    networks:
      - intranet
    command: npm run dev

networks:
  intranet:
    driver: bridge

volumes:
  mongodb-data:
    driver: local


  # mongodb:
  #   image: docker.io/bitnami/mongodb-sharded:6.0
  #   container_name: mongodb
  #   restart: always
  #   profiles: ['server', 'all']
  #   environment:
  #     - MONGODB_ADVERTISED_HOSTNAME=mongodb
  #     - MONGODB_SHARDING_MODE=mongos
  #     - MONGODB_CFG_PRIMARY_HOST=mongodb-cfg
  #     - MONGODB_CFG_REPLICA_SET_NAME=cfgreplicaset
  #     - MONGODB_REPLICA_SET_KEY=replicasetkey
  #     - MONGODB_ROOT_PASSWORD=password
  #   networks:
  #     - lateats_network

  # mongodb-shard0:
  #   image: docker.io/bitnami/mongodb-sharded:6.0
  #   container_name: mongodb-shard0
  #   restart: always
  #   profiles: ['server', 'all']
  #   environment:
  #     - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard0
  #     - MONGODB_SHARDING_MODE=shardsvr
  #     - MONGODB_MONGOS_HOST=mongodb
  #     - MONGODB_ROOT_PASSWORD=password
  #     - MONGODB_REPLICA_SET_MODE=primary
  #     - MONGODB_REPLICA_SET_KEY=replicasetkey
  #     - MONGODB_REPLICA_SET_NAME=shard0
  #   networks:
  #     - lateats_network

  # mongodb-shard1:
  #   image: docker.io/bitnami/mongodb-sharded:6.0
  #   container_name: mongodb-shard1
  #   restart: always
  #   profiles: ['server', 'all']
  #   environment:
  #     - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard1
  #     - MONGODB_SHARDING_MODE=shardsvr
  #     - MONGODB_MONGOS_HOST=mongodb
  #     - MONGODB_ROOT_PASSWORD=password
  #     - MONGODB_REPLICA_SET_MODE=primary
  #     - MONGODB_REPLICA_SET_KEY=replicasetkey
  #     - MONGODB_REPLICA_SET_NAME=shard1
  #   networks:
  #     - lateats_network

  # mongodb-shard2:
  #   image: docker.io/bitnami/mongodb-sharded:6.0
  #   container_name: mongodb-shard2
  #   restart: always
  #   profiles: ['server', 'all']
  #   environment:
  #     - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard2
  #     - MONGODB_SHARDING_MODE=shardsvr
  #     - MONGODB_MONGOS_HOST=mongodb
  #     - MONGODB_ROOT_PASSWORD=password
  #     - MONGODB_REPLICA_SET_MODE=primary
  #     - MONGODB_REPLICA_SET_KEY=replicasetkey
  #     - MONGODB_REPLICA_SET_NAME=shard2
  #   networks:
  #     - lateats_network

  # mongodb-cfg:
  #   image: docker.io/bitnami/mongodb-sharded:6.0
  #   container_name: mongodb-cfg
  #   restart: always
  #   profiles: ['server', 'all']
  #   environment:
  #     - MONGODB_ADVERTISED_HOSTNAME=mongodb-cfg
  #     - MONGODB_SHARDING_MODE=configsvr
  #     - MONGODB_ROOT_PASSWORD=password
  #     - MONGODB_REPLICA_SET_MODE=primary
  #     - MONGODB_REPLICA_SET_KEY=replicasetkey
  #     - MONGODB_REPLICA_SET_NAME=cfgreplicaset
  #   networks:
  #     - lateats_network

  # mongoimport:
  #   build:
  #     context: ./node_server/mongo-import
  #   container_name: mongoimport
  #   profiles: ['server', 'all']
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - lateats_network
